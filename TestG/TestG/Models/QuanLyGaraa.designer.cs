#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestG.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyGaRa")]
	public partial class QuanLyGaraaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietDoanhThu(ChiTietDoanhThu instance);
    partial void UpdateChiTietDoanhThu(ChiTietDoanhThu instance);
    partial void DeleteChiTietDoanhThu(ChiTietDoanhThu instance);
    partial void InsertVatTu(VatTu instance);
    partial void UpdateVatTu(VatTu instance);
    partial void DeleteVatTu(VatTu instance);
    partial void InsertChiTietSuaChua(ChiTietSuaChua instance);
    partial void UpdateChiTietSuaChua(ChiTietSuaChua instance);
    partial void DeleteChiTietSuaChua(ChiTietSuaChua instance);
    partial void InsertChiTietUser(ChiTietUser instance);
    partial void UpdateChiTietUser(ChiTietUser instance);
    partial void DeleteChiTietUser(ChiTietUser instance);
    partial void InsertChoPhepSuDungQuyen(ChoPhepSuDungQuyen instance);
    partial void UpdateChoPhepSuDungQuyen(ChoPhepSuDungQuyen instance);
    partial void DeleteChoPhepSuDungQuyen(ChoPhepSuDungQuyen instance);
    partial void InsertChucVu(ChucVu instance);
    partial void UpdateChucVu(ChucVu instance);
    partial void DeleteChucVu(ChucVu instance);
    partial void InsertCTNhapKho(CTNhapKho instance);
    partial void UpdateCTNhapKho(CTNhapKho instance);
    partial void DeleteCTNhapKho(CTNhapKho instance);
    partial void InsertCTTonKho(CTTonKho instance);
    partial void UpdateCTTonKho(CTTonKho instance);
    partial void DeleteCTTonKho(CTTonKho instance);
    partial void InsertDichVu(DichVu instance);
    partial void UpdateDichVu(DichVu instance);
    partial void DeleteDichVu(DichVu instance);
    partial void InsertDoanhThu(DoanhThu instance);
    partial void UpdateDoanhThu(DoanhThu instance);
    partial void DeleteDoanhThu(DoanhThu instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertNhaCungCap(NhaCungCap instance);
    partial void UpdateNhaCungCap(NhaCungCap instance);
    partial void DeleteNhaCungCap(NhaCungCap instance);
    partial void InsertNhapKho(NhapKho instance);
    partial void UpdateNhapKho(NhapKho instance);
    partial void DeleteNhapKho(NhapKho instance);
    partial void InsertQuyen(Quyen instance);
    partial void UpdateQuyen(Quyen instance);
    partial void DeleteQuyen(Quyen instance);
    partial void InsertSuaChua(SuaChua instance);
    partial void UpdateSuaChua(SuaChua instance);
    partial void DeleteSuaChua(SuaChua instance);
    partial void InsertThuongHieuXe(ThuongHieuXe instance);
    partial void UpdateThuongHieuXe(ThuongHieuXe instance);
    partial void DeleteThuongHieuXe(ThuongHieuXe instance);
    partial void InsertTiepNhanXe(TiepNhanXe instance);
    partial void UpdateTiepNhanXe(TiepNhanXe instance);
    partial void DeleteTiepNhanXe(TiepNhanXe instance);
    partial void InsertTonKho(TonKho instance);
    partial void UpdateTonKho(TonKho instance);
    partial void DeleteTonKho(TonKho instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public QuanLyGaraaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyGaraaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyGaraaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyGaraaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietDoanhThu> ChiTietDoanhThus
		{
			get
			{
				return this.GetTable<ChiTietDoanhThu>();
			}
		}
		
		public System.Data.Linq.Table<VatTu> VatTus
		{
			get
			{
				return this.GetTable<VatTu>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietSuaChua> ChiTietSuaChuas
		{
			get
			{
				return this.GetTable<ChiTietSuaChua>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietUser> ChiTietUsers
		{
			get
			{
				return this.GetTable<ChiTietUser>();
			}
		}
		
		public System.Data.Linq.Table<ChoPhepSuDungQuyen> ChoPhepSuDungQuyens
		{
			get
			{
				return this.GetTable<ChoPhepSuDungQuyen>();
			}
		}
		
		public System.Data.Linq.Table<ChucVu> ChucVus
		{
			get
			{
				return this.GetTable<ChucVu>();
			}
		}
		
		public System.Data.Linq.Table<CTNhapKho> CTNhapKhos
		{
			get
			{
				return this.GetTable<CTNhapKho>();
			}
		}
		
		public System.Data.Linq.Table<CTTonKho> CTTonKhos
		{
			get
			{
				return this.GetTable<CTTonKho>();
			}
		}
		
		public System.Data.Linq.Table<DichVu> DichVus
		{
			get
			{
				return this.GetTable<DichVu>();
			}
		}
		
		public System.Data.Linq.Table<DoanhThu> DoanhThus
		{
			get
			{
				return this.GetTable<DoanhThu>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
		{
			get
			{
				return this.GetTable<NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<NhapKho> NhapKhos
		{
			get
			{
				return this.GetTable<NhapKho>();
			}
		}
		
		public System.Data.Linq.Table<Quyen> Quyens
		{
			get
			{
				return this.GetTable<Quyen>();
			}
		}
		
		public System.Data.Linq.Table<SuaChua> SuaChuas
		{
			get
			{
				return this.GetTable<SuaChua>();
			}
		}
		
		public System.Data.Linq.Table<ThuongHieuXe> ThuongHieuXes
		{
			get
			{
				return this.GetTable<ThuongHieuXe>();
			}
		}
		
		public System.Data.Linq.Table<TiepNhanXe> TiepNhanXes
		{
			get
			{
				return this.GetTable<TiepNhanXe>();
			}
		}
		
		public System.Data.Linq.Table<TonKho> TonKhos
		{
			get
			{
				return this.GetTable<TonKho>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDoanhThu")]
	public partial class ChiTietDoanhThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDoanhThu;
		
		private int _IDHangXe;
		
		private System.Nullable<int> _SoLuotSua;
		
		private System.Nullable<int> _TongTien;
		
		private System.Nullable<double> _Rate;
		
		private EntityRef<ThuongHieuXe> _ThuongHieuXe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDoanhThuChanging(int value);
    partial void OnIDDoanhThuChanged();
    partial void OnIDHangXeChanging(int value);
    partial void OnIDHangXeChanged();
    partial void OnSoLuotSuaChanging(System.Nullable<int> value);
    partial void OnSoLuotSuaChanged();
    partial void OnTongTienChanging(System.Nullable<int> value);
    partial void OnTongTienChanged();
    partial void OnRateChanging(System.Nullable<double> value);
    partial void OnRateChanged();
    #endregion
		
		public ChiTietDoanhThu()
		{
			this._ThuongHieuXe = default(EntityRef<ThuongHieuXe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDoanhThu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDDoanhThu
		{
			get
			{
				return this._IDDoanhThu;
			}
			set
			{
				if ((this._IDDoanhThu != value))
				{
					this.OnIDDoanhThuChanging(value);
					this.SendPropertyChanging();
					this._IDDoanhThu = value;
					this.SendPropertyChanged("IDDoanhThu");
					this.OnIDDoanhThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHangXe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHangXe
		{
			get
			{
				return this._IDHangXe;
			}
			set
			{
				if ((this._IDHangXe != value))
				{
					if (this._ThuongHieuXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHangXeChanging(value);
					this.SendPropertyChanging();
					this._IDHangXe = value;
					this.SendPropertyChanged("IDHangXe");
					this.OnIDHangXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuotSua", DbType="Int")]
		public System.Nullable<int> SoLuotSua
		{
			get
			{
				return this._SoLuotSua;
			}
			set
			{
				if ((this._SoLuotSua != value))
				{
					this.OnSoLuotSuaChanging(value);
					this.SendPropertyChanging();
					this._SoLuotSua = value;
					this.SendPropertyChanged("SoLuotSua");
					this.OnSoLuotSuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Int")]
		public System.Nullable<int> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Float")]
		public System.Nullable<double> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieuXe_ChiTietDoanhThu", Storage="_ThuongHieuXe", ThisKey="IDHangXe", OtherKey="IDThuongHieuXe", IsForeignKey=true)]
		public ThuongHieuXe ThuongHieuXe
		{
			get
			{
				return this._ThuongHieuXe.Entity;
			}
			set
			{
				ThuongHieuXe previousValue = this._ThuongHieuXe.Entity;
				if (((previousValue != value) 
							|| (this._ThuongHieuXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuongHieuXe.Entity = null;
						previousValue.ChiTietDoanhThus.Remove(this);
					}
					this._ThuongHieuXe.Entity = value;
					if ((value != null))
					{
						value.ChiTietDoanhThus.Add(this);
						this._IDHangXe = value.IDThuongHieuXe;
					}
					else
					{
						this._IDHangXe = default(int);
					}
					this.SendPropertyChanged("ThuongHieuXe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VatTu")]
	public partial class VatTu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDVatTu;
		
		private string _Ten;
		
		private System.Nullable<int> _Gia;
		
		private System.Nullable<int> _SoLuong;
		
		private string _Anh;
		
		private System.Nullable<int> _IDHangXe;
		
		private EntitySet<ChiTietSuaChua> _ChiTietSuaChuas;
		
		private EntitySet<CTNhapKho> _CTNhapKhos;
		
		private EntitySet<CTTonKho> _CTTonKhos;
		
		private EntityRef<ThuongHieuXe> _ThuongHieuXe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDVatTuChanging(int value);
    partial void OnIDVatTuChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnGiaChanging(System.Nullable<int> value);
    partial void OnGiaChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnAnhChanging(string value);
    partial void OnAnhChanged();
    partial void OnIDHangXeChanging(System.Nullable<int> value);
    partial void OnIDHangXeChanged();
    #endregion
		
		public VatTu()
		{
			this._ChiTietSuaChuas = new EntitySet<ChiTietSuaChua>(new Action<ChiTietSuaChua>(this.attach_ChiTietSuaChuas), new Action<ChiTietSuaChua>(this.detach_ChiTietSuaChuas));
			this._CTNhapKhos = new EntitySet<CTNhapKho>(new Action<CTNhapKho>(this.attach_CTNhapKhos), new Action<CTNhapKho>(this.detach_CTNhapKhos));
			this._CTTonKhos = new EntitySet<CTTonKho>(new Action<CTTonKho>(this.attach_CTTonKhos), new Action<CTTonKho>(this.detach_CTTonKhos));
			this._ThuongHieuXe = default(EntityRef<ThuongHieuXe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVatTu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDVatTu
		{
			get
			{
				return this._IDVatTu;
			}
			set
			{
				if ((this._IDVatTu != value))
				{
					this.OnIDVatTuChanging(value);
					this.SendPropertyChanging();
					this._IDVatTu = value;
					this.SendPropertyChanged("IDVatTu");
					this.OnIDVatTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int")]
		public System.Nullable<int> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh", DbType="VarChar(MAX)")]
		public string Anh
		{
			get
			{
				return this._Anh;
			}
			set
			{
				if ((this._Anh != value))
				{
					this.OnAnhChanging(value);
					this.SendPropertyChanging();
					this._Anh = value;
					this.SendPropertyChanged("Anh");
					this.OnAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHangXe", DbType="Int")]
		public System.Nullable<int> IDHangXe
		{
			get
			{
				return this._IDHangXe;
			}
			set
			{
				if ((this._IDHangXe != value))
				{
					if (this._ThuongHieuXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHangXeChanging(value);
					this.SendPropertyChanging();
					this._IDHangXe = value;
					this.SendPropertyChanged("IDHangXe");
					this.OnIDHangXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VatTu_ChiTietSuaChua", Storage="_ChiTietSuaChuas", ThisKey="IDVatTu", OtherKey="IDMaVatTu")]
		public EntitySet<ChiTietSuaChua> ChiTietSuaChuas
		{
			get
			{
				return this._ChiTietSuaChuas;
			}
			set
			{
				this._ChiTietSuaChuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VatTu_CTNhapKho", Storage="_CTNhapKhos", ThisKey="IDVatTu", OtherKey="IDVatTu")]
		public EntitySet<CTNhapKho> CTNhapKhos
		{
			get
			{
				return this._CTNhapKhos;
			}
			set
			{
				this._CTNhapKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VatTu_CTTonKho", Storage="_CTTonKhos", ThisKey="IDVatTu", OtherKey="IDVatTu")]
		public EntitySet<CTTonKho> CTTonKhos
		{
			get
			{
				return this._CTTonKhos;
			}
			set
			{
				this._CTTonKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieuXe_VatTu", Storage="_ThuongHieuXe", ThisKey="IDHangXe", OtherKey="IDThuongHieuXe", IsForeignKey=true)]
		public ThuongHieuXe ThuongHieuXe
		{
			get
			{
				return this._ThuongHieuXe.Entity;
			}
			set
			{
				ThuongHieuXe previousValue = this._ThuongHieuXe.Entity;
				if (((previousValue != value) 
							|| (this._ThuongHieuXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuongHieuXe.Entity = null;
						previousValue.VatTus.Remove(this);
					}
					this._ThuongHieuXe.Entity = value;
					if ((value != null))
					{
						value.VatTus.Add(this);
						this._IDHangXe = value.IDThuongHieuXe;
					}
					else
					{
						this._IDHangXe = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThuongHieuXe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietSuaChuas(ChiTietSuaChua entity)
		{
			this.SendPropertyChanging();
			entity.VatTu = this;
		}
		
		private void detach_ChiTietSuaChuas(ChiTietSuaChua entity)
		{
			this.SendPropertyChanging();
			entity.VatTu = null;
		}
		
		private void attach_CTNhapKhos(CTNhapKho entity)
		{
			this.SendPropertyChanging();
			entity.VatTu = this;
		}
		
		private void detach_CTNhapKhos(CTNhapKho entity)
		{
			this.SendPropertyChanging();
			entity.VatTu = null;
		}
		
		private void attach_CTTonKhos(CTTonKho entity)
		{
			this.SendPropertyChanging();
			entity.VatTu = this;
		}
		
		private void detach_CTTonKhos(CTTonKho entity)
		{
			this.SendPropertyChanging();
			entity.VatTu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietSuaChua")]
	public partial class ChiTietSuaChua : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDSuaChu;
		
		private System.Nullable<int> _IDMaVatTu;
		
		private System.Nullable<int> _IDMaSuaChu;
		
		private string _NoiDung;
		
		private System.Nullable<int> _DonGia;
		
		private System.Nullable<int> _SoLuongVatTu;
		
		private System.Nullable<int> _TongTien;
		
		private System.Nullable<int> _IDUser;
		
		private System.Nullable<int> _IDTienCong;
		
		private EntityRef<VatTu> _VatTu;
		
		private EntityRef<DichVu> _DichVu;
		
		private EntityRef<SuaChua> _SuaChua;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSuaChuChanging(int value);
    partial void OnIDSuaChuChanged();
    partial void OnIDMaVatTuChanging(System.Nullable<int> value);
    partial void OnIDMaVatTuChanged();
    partial void OnIDMaSuaChuChanging(System.Nullable<int> value);
    partial void OnIDMaSuaChuChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnDonGiaChanging(System.Nullable<int> value);
    partial void OnDonGiaChanged();
    partial void OnSoLuongVatTuChanging(System.Nullable<int> value);
    partial void OnSoLuongVatTuChanged();
    partial void OnTongTienChanging(System.Nullable<int> value);
    partial void OnTongTienChanged();
    partial void OnIDUserChanging(System.Nullable<int> value);
    partial void OnIDUserChanged();
    partial void OnIDTienCongChanging(System.Nullable<int> value);
    partial void OnIDTienCongChanged();
    #endregion
		
		public ChiTietSuaChua()
		{
			this._VatTu = default(EntityRef<VatTu>);
			this._DichVu = default(EntityRef<DichVu>);
			this._SuaChua = default(EntityRef<SuaChua>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSuaChu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDSuaChu
		{
			get
			{
				return this._IDSuaChu;
			}
			set
			{
				if ((this._IDSuaChu != value))
				{
					this.OnIDSuaChuChanging(value);
					this.SendPropertyChanging();
					this._IDSuaChu = value;
					this.SendPropertyChanged("IDSuaChu");
					this.OnIDSuaChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMaVatTu", DbType="Int")]
		public System.Nullable<int> IDMaVatTu
		{
			get
			{
				return this._IDMaVatTu;
			}
			set
			{
				if ((this._IDMaVatTu != value))
				{
					if (this._VatTu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMaVatTuChanging(value);
					this.SendPropertyChanging();
					this._IDMaVatTu = value;
					this.SendPropertyChanged("IDMaVatTu");
					this.OnIDMaVatTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMaSuaChu", DbType="Int")]
		public System.Nullable<int> IDMaSuaChu
		{
			get
			{
				return this._IDMaSuaChu;
			}
			set
			{
				if ((this._IDMaSuaChu != value))
				{
					if (this._SuaChua.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMaSuaChuChanging(value);
					this.SendPropertyChanging();
					this._IDMaSuaChu = value;
					this.SendPropertyChanged("IDMaSuaChu");
					this.OnIDMaSuaChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int")]
		public System.Nullable<int> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongVatTu", DbType="Int")]
		public System.Nullable<int> SoLuongVatTu
		{
			get
			{
				return this._SoLuongVatTu;
			}
			set
			{
				if ((this._SoLuongVatTu != value))
				{
					this.OnSoLuongVatTuChanging(value);
					this.SendPropertyChanging();
					this._SoLuongVatTu = value;
					this.SendPropertyChanged("SoLuongVatTu");
					this.OnSoLuongVatTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Int")]
		public System.Nullable<int> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", DbType="Int")]
		public System.Nullable<int> IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTienCong", DbType="Int")]
		public System.Nullable<int> IDTienCong
		{
			get
			{
				return this._IDTienCong;
			}
			set
			{
				if ((this._IDTienCong != value))
				{
					if (this._DichVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTienCongChanging(value);
					this.SendPropertyChanging();
					this._IDTienCong = value;
					this.SendPropertyChanged("IDTienCong");
					this.OnIDTienCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VatTu_ChiTietSuaChua", Storage="_VatTu", ThisKey="IDMaVatTu", OtherKey="IDVatTu", IsForeignKey=true)]
		public VatTu VatTu
		{
			get
			{
				return this._VatTu.Entity;
			}
			set
			{
				VatTu previousValue = this._VatTu.Entity;
				if (((previousValue != value) 
							|| (this._VatTu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VatTu.Entity = null;
						previousValue.ChiTietSuaChuas.Remove(this);
					}
					this._VatTu.Entity = value;
					if ((value != null))
					{
						value.ChiTietSuaChuas.Add(this);
						this._IDMaVatTu = value.IDVatTu;
					}
					else
					{
						this._IDMaVatTu = default(Nullable<int>);
					}
					this.SendPropertyChanged("VatTu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_ChiTietSuaChua", Storage="_DichVu", ThisKey="IDTienCong", OtherKey="IDTienCong", IsForeignKey=true)]
		public DichVu DichVu
		{
			get
			{
				return this._DichVu.Entity;
			}
			set
			{
				DichVu previousValue = this._DichVu.Entity;
				if (((previousValue != value) 
							|| (this._DichVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DichVu.Entity = null;
						previousValue.ChiTietSuaChuas.Remove(this);
					}
					this._DichVu.Entity = value;
					if ((value != null))
					{
						value.ChiTietSuaChuas.Add(this);
						this._IDTienCong = value.IDTienCong;
					}
					else
					{
						this._IDTienCong = default(Nullable<int>);
					}
					this.SendPropertyChanged("DichVu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuaChua_ChiTietSuaChua", Storage="_SuaChua", ThisKey="IDMaSuaChu", OtherKey="IDMaSuaChua", IsForeignKey=true)]
		public SuaChua SuaChua
		{
			get
			{
				return this._SuaChua.Entity;
			}
			set
			{
				SuaChua previousValue = this._SuaChua.Entity;
				if (((previousValue != value) 
							|| (this._SuaChua.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuaChua.Entity = null;
						previousValue.ChiTietSuaChuas.Remove(this);
					}
					this._SuaChua.Entity = value;
					if ((value != null))
					{
						value.ChiTietSuaChuas.Add(this);
						this._IDMaSuaChu = value.IDMaSuaChua;
					}
					else
					{
						this._IDMaSuaChu = default(Nullable<int>);
					}
					this.SendPropertyChanged("SuaChua");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ChiTietSuaChua", Storage="_User", ThisKey="IDUser", OtherKey="IDUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ChiTietSuaChuas.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ChiTietSuaChuas.Add(this);
						this._IDUser = value.IDUser;
					}
					else
					{
						this._IDUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietUser")]
	public partial class ChiTietUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDThongTinNguoiDung;
		
		private int _IDUser;
		
		private string _HoTen;
		
		private string _DiaChi;
		
		private string _NgaySinh;
		
		private string _CMND;
		
		private string _SoDienThoai;
		
		private System.Nullable<int> _Luong;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDThongTinNguoiDungChanging(int value);
    partial void OnIDThongTinNguoiDungChanged();
    partial void OnIDUserChanging(int value);
    partial void OnIDUserChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnNgaySinhChanging(string value);
    partial void OnNgaySinhChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnLuongChanging(System.Nullable<int> value);
    partial void OnLuongChanged();
    #endregion
		
		public ChiTietUser()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDThongTinNguoiDung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDThongTinNguoiDung
		{
			get
			{
				return this._IDThongTinNguoiDung;
			}
			set
			{
				if ((this._IDThongTinNguoiDung != value))
				{
					this.OnIDThongTinNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IDThongTinNguoiDung = value;
					this.SendPropertyChanged("IDThongTinNguoiDung");
					this.OnIDThongTinNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", DbType="Int NOT NULL")]
		public int IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(MAX)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(150)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="NVarChar(MAX)")]
		public string NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(MAX)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(20)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luong", DbType="Int")]
		public System.Nullable<int> Luong
		{
			get
			{
				return this._Luong;
			}
			set
			{
				if ((this._Luong != value))
				{
					this.OnLuongChanging(value);
					this.SendPropertyChanging();
					this._Luong = value;
					this.SendPropertyChanged("Luong");
					this.OnLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ChiTietUser", Storage="_User", ThisKey="IDUser", OtherKey="IDUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ChiTietUsers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ChiTietUsers.Add(this);
						this._IDUser = value.IDUser;
					}
					else
					{
						this._IDUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChoPhepSuDungQuyen")]
	public partial class ChoPhepSuDungQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPhanQyen;
		
		private System.Nullable<int> _IDChucVu;
		
		private System.Nullable<int> _IDQuyen;
		
		private System.Nullable<bool> _ChoPhepSuDungQuyen1;
		
		private EntityRef<ChucVu> _ChucVu;
		
		private EntityRef<Quyen> _Quyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPhanQyenChanging(int value);
    partial void OnIDPhanQyenChanged();
    partial void OnIDChucVuChanging(System.Nullable<int> value);
    partial void OnIDChucVuChanged();
    partial void OnIDQuyenChanging(System.Nullable<int> value);
    partial void OnIDQuyenChanged();
    partial void OnChoPhepSuDungQuyen1Changing(System.Nullable<bool> value);
    partial void OnChoPhepSuDungQuyen1Changed();
    #endregion
		
		public ChoPhepSuDungQuyen()
		{
			this._ChucVu = default(EntityRef<ChucVu>);
			this._Quyen = default(EntityRef<Quyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhanQyen", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPhanQyen
		{
			get
			{
				return this._IDPhanQyen;
			}
			set
			{
				if ((this._IDPhanQyen != value))
				{
					this.OnIDPhanQyenChanging(value);
					this.SendPropertyChanging();
					this._IDPhanQyen = value;
					this.SendPropertyChanged("IDPhanQyen");
					this.OnIDPhanQyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDChucVu", DbType="Int")]
		public System.Nullable<int> IDChucVu
		{
			get
			{
				return this._IDChucVu;
			}
			set
			{
				if ((this._IDChucVu != value))
				{
					if (this._ChucVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChucVuChanging(value);
					this.SendPropertyChanging();
					this._IDChucVu = value;
					this.SendPropertyChanged("IDChucVu");
					this.OnIDChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDQuyen", DbType="Int")]
		public System.Nullable<int> IDQuyen
		{
			get
			{
				return this._IDQuyen;
			}
			set
			{
				if ((this._IDQuyen != value))
				{
					if (this._Quyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDQuyenChanging(value);
					this.SendPropertyChanging();
					this._IDQuyen = value;
					this.SendPropertyChanged("IDQuyen");
					this.OnIDQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ChoPhepSuDungQuyen", Storage="_ChoPhepSuDungQuyen1", DbType="Bit")]
		public System.Nullable<bool> ChoPhepSuDungQuyen1
		{
			get
			{
				return this._ChoPhepSuDungQuyen1;
			}
			set
			{
				if ((this._ChoPhepSuDungQuyen1 != value))
				{
					this.OnChoPhepSuDungQuyen1Changing(value);
					this.SendPropertyChanging();
					this._ChoPhepSuDungQuyen1 = value;
					this.SendPropertyChanged("ChoPhepSuDungQuyen1");
					this.OnChoPhepSuDungQuyen1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_ChoPhepSuDungQuyen", Storage="_ChucVu", ThisKey="IDChucVu", OtherKey="IDChuVu", IsForeignKey=true)]
		public ChucVu ChucVu
		{
			get
			{
				return this._ChucVu.Entity;
			}
			set
			{
				ChucVu previousValue = this._ChucVu.Entity;
				if (((previousValue != value) 
							|| (this._ChucVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChucVu.Entity = null;
						previousValue.ChoPhepSuDungQuyens.Remove(this);
					}
					this._ChucVu.Entity = value;
					if ((value != null))
					{
						value.ChoPhepSuDungQuyens.Add(this);
						this._IDChucVu = value.IDChuVu;
					}
					else
					{
						this._IDChucVu = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChucVu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quyen_ChoPhepSuDungQuyen", Storage="_Quyen", ThisKey="IDQuyen", OtherKey="IDQuyen", IsForeignKey=true)]
		public Quyen Quyen
		{
			get
			{
				return this._Quyen.Entity;
			}
			set
			{
				Quyen previousValue = this._Quyen.Entity;
				if (((previousValue != value) 
							|| (this._Quyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quyen.Entity = null;
						previousValue.ChoPhepSuDungQuyens.Remove(this);
					}
					this._Quyen.Entity = value;
					if ((value != null))
					{
						value.ChoPhepSuDungQuyens.Add(this);
						this._IDQuyen = value.IDQuyen;
					}
					else
					{
						this._IDQuyen = default(Nullable<int>);
					}
					this.SendPropertyChanged("Quyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChucVu")]
	public partial class ChucVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDChuVu;
		
		private string _Ten;
		
		private EntitySet<ChoPhepSuDungQuyen> _ChoPhepSuDungQuyens;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChuVuChanging(int value);
    partial void OnIDChuVuChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    #endregion
		
		public ChucVu()
		{
			this._ChoPhepSuDungQuyens = new EntitySet<ChoPhepSuDungQuyen>(new Action<ChoPhepSuDungQuyen>(this.attach_ChoPhepSuDungQuyens), new Action<ChoPhepSuDungQuyen>(this.detach_ChoPhepSuDungQuyens));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDChuVu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDChuVu
		{
			get
			{
				return this._IDChuVu;
			}
			set
			{
				if ((this._IDChuVu != value))
				{
					this.OnIDChuVuChanging(value);
					this.SendPropertyChanging();
					this._IDChuVu = value;
					this.SendPropertyChanged("IDChuVu");
					this.OnIDChuVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(MAX)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_ChoPhepSuDungQuyen", Storage="_ChoPhepSuDungQuyens", ThisKey="IDChuVu", OtherKey="IDChucVu")]
		public EntitySet<ChoPhepSuDungQuyen> ChoPhepSuDungQuyens
		{
			get
			{
				return this._ChoPhepSuDungQuyens;
			}
			set
			{
				this._ChoPhepSuDungQuyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_User", Storage="_Users", ThisKey="IDChuVu", OtherKey="IDChucVu")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChoPhepSuDungQuyens(ChoPhepSuDungQuyen entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = this;
		}
		
		private void detach_ChoPhepSuDungQuyens(ChoPhepSuDungQuyen entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTNhapKho")]
	public partial class CTNhapKho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDVatTu;
		
		private int _IDNhapKho;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _Gia;
		
		private System.Nullable<int> _TongTien;
		
		private EntityRef<VatTu> _VatTu;
		
		private EntityRef<NhapKho> _NhapKho;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDVatTuChanging(int value);
    partial void OnIDVatTuChanged();
    partial void OnIDNhapKhoChanging(int value);
    partial void OnIDNhapKhoChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnGiaChanging(System.Nullable<int> value);
    partial void OnGiaChanged();
    partial void OnTongTienChanging(System.Nullable<int> value);
    partial void OnTongTienChanged();
    #endregion
		
		public CTNhapKho()
		{
			this._VatTu = default(EntityRef<VatTu>);
			this._NhapKho = default(EntityRef<NhapKho>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVatTu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDVatTu
		{
			get
			{
				return this._IDVatTu;
			}
			set
			{
				if ((this._IDVatTu != value))
				{
					if (this._VatTu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDVatTuChanging(value);
					this.SendPropertyChanging();
					this._IDVatTu = value;
					this.SendPropertyChanged("IDVatTu");
					this.OnIDVatTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhapKho", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDNhapKho
		{
			get
			{
				return this._IDNhapKho;
			}
			set
			{
				if ((this._IDNhapKho != value))
				{
					if (this._NhapKho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNhapKhoChanging(value);
					this.SendPropertyChanging();
					this._IDNhapKho = value;
					this.SendPropertyChanged("IDNhapKho");
					this.OnIDNhapKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int")]
		public System.Nullable<int> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Int")]
		public System.Nullable<int> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VatTu_CTNhapKho", Storage="_VatTu", ThisKey="IDVatTu", OtherKey="IDVatTu", IsForeignKey=true)]
		public VatTu VatTu
		{
			get
			{
				return this._VatTu.Entity;
			}
			set
			{
				VatTu previousValue = this._VatTu.Entity;
				if (((previousValue != value) 
							|| (this._VatTu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VatTu.Entity = null;
						previousValue.CTNhapKhos.Remove(this);
					}
					this._VatTu.Entity = value;
					if ((value != null))
					{
						value.CTNhapKhos.Add(this);
						this._IDVatTu = value.IDVatTu;
					}
					else
					{
						this._IDVatTu = default(int);
					}
					this.SendPropertyChanged("VatTu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhapKho_CTNhapKho", Storage="_NhapKho", ThisKey="IDNhapKho", OtherKey="IDNhapKho", IsForeignKey=true)]
		public NhapKho NhapKho
		{
			get
			{
				return this._NhapKho.Entity;
			}
			set
			{
				NhapKho previousValue = this._NhapKho.Entity;
				if (((previousValue != value) 
							|| (this._NhapKho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhapKho.Entity = null;
						previousValue.CTNhapKhos.Remove(this);
					}
					this._NhapKho.Entity = value;
					if ((value != null))
					{
						value.CTNhapKhos.Add(this);
						this._IDNhapKho = value.IDNhapKho;
					}
					else
					{
						this._IDNhapKho = default(int);
					}
					this.SendPropertyChanged("NhapKho");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTTonKho")]
	public partial class CTTonKho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDVatTu;
		
		private int _IDTonKho;
		
		private System.Nullable<int> _TonDau;
		
		private System.Nullable<int> _PhatSinh;
		
		private System.Nullable<int> _TonCuoi;
		
		private EntityRef<VatTu> _VatTu;
		
		private EntityRef<TonKho> _TonKho;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDVatTuChanging(int value);
    partial void OnIDVatTuChanged();
    partial void OnIDTonKhoChanging(int value);
    partial void OnIDTonKhoChanged();
    partial void OnTonDauChanging(System.Nullable<int> value);
    partial void OnTonDauChanged();
    partial void OnPhatSinhChanging(System.Nullable<int> value);
    partial void OnPhatSinhChanged();
    partial void OnTonCuoiChanging(System.Nullable<int> value);
    partial void OnTonCuoiChanged();
    #endregion
		
		public CTTonKho()
		{
			this._VatTu = default(EntityRef<VatTu>);
			this._TonKho = default(EntityRef<TonKho>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVatTu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDVatTu
		{
			get
			{
				return this._IDVatTu;
			}
			set
			{
				if ((this._IDVatTu != value))
				{
					if (this._VatTu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDVatTuChanging(value);
					this.SendPropertyChanging();
					this._IDVatTu = value;
					this.SendPropertyChanged("IDVatTu");
					this.OnIDVatTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTonKho", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTonKho
		{
			get
			{
				return this._IDTonKho;
			}
			set
			{
				if ((this._IDTonKho != value))
				{
					if (this._TonKho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTonKhoChanging(value);
					this.SendPropertyChanging();
					this._IDTonKho = value;
					this.SendPropertyChanged("IDTonKho");
					this.OnIDTonKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TonDau", DbType="Int")]
		public System.Nullable<int> TonDau
		{
			get
			{
				return this._TonDau;
			}
			set
			{
				if ((this._TonDau != value))
				{
					this.OnTonDauChanging(value);
					this.SendPropertyChanging();
					this._TonDau = value;
					this.SendPropertyChanged("TonDau");
					this.OnTonDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhatSinh", DbType="Int")]
		public System.Nullable<int> PhatSinh
		{
			get
			{
				return this._PhatSinh;
			}
			set
			{
				if ((this._PhatSinh != value))
				{
					this.OnPhatSinhChanging(value);
					this.SendPropertyChanging();
					this._PhatSinh = value;
					this.SendPropertyChanged("PhatSinh");
					this.OnPhatSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TonCuoi", DbType="Int")]
		public System.Nullable<int> TonCuoi
		{
			get
			{
				return this._TonCuoi;
			}
			set
			{
				if ((this._TonCuoi != value))
				{
					this.OnTonCuoiChanging(value);
					this.SendPropertyChanging();
					this._TonCuoi = value;
					this.SendPropertyChanged("TonCuoi");
					this.OnTonCuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VatTu_CTTonKho", Storage="_VatTu", ThisKey="IDVatTu", OtherKey="IDVatTu", IsForeignKey=true)]
		public VatTu VatTu
		{
			get
			{
				return this._VatTu.Entity;
			}
			set
			{
				VatTu previousValue = this._VatTu.Entity;
				if (((previousValue != value) 
							|| (this._VatTu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VatTu.Entity = null;
						previousValue.CTTonKhos.Remove(this);
					}
					this._VatTu.Entity = value;
					if ((value != null))
					{
						value.CTTonKhos.Add(this);
						this._IDVatTu = value.IDVatTu;
					}
					else
					{
						this._IDVatTu = default(int);
					}
					this.SendPropertyChanged("VatTu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TonKho_CTTonKho", Storage="_TonKho", ThisKey="IDTonKho", OtherKey="IDTonKho", IsForeignKey=true)]
		public TonKho TonKho
		{
			get
			{
				return this._TonKho.Entity;
			}
			set
			{
				TonKho previousValue = this._TonKho.Entity;
				if (((previousValue != value) 
							|| (this._TonKho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TonKho.Entity = null;
						previousValue.CTTonKhos.Remove(this);
					}
					this._TonKho.Entity = value;
					if ((value != null))
					{
						value.CTTonKhos.Add(this);
						this._IDTonKho = value.IDTonKho;
					}
					else
					{
						this._IDTonKho = default(int);
					}
					this.SendPropertyChanged("TonKho");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DichVu")]
	public partial class DichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTienCong;
		
		private string _Ten;
		
		private System.Nullable<int> _GiaTri;
		
		private EntitySet<ChiTietSuaChua> _ChiTietSuaChuas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTienCongChanging(int value);
    partial void OnIDTienCongChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnGiaTriChanging(System.Nullable<int> value);
    partial void OnGiaTriChanged();
    #endregion
		
		public DichVu()
		{
			this._ChiTietSuaChuas = new EntitySet<ChiTietSuaChua>(new Action<ChiTietSuaChua>(this.attach_ChiTietSuaChuas), new Action<ChiTietSuaChua>(this.detach_ChiTietSuaChuas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTienCong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTienCong
		{
			get
			{
				return this._IDTienCong;
			}
			set
			{
				if ((this._IDTienCong != value))
				{
					this.OnIDTienCongChanging(value);
					this.SendPropertyChanging();
					this._IDTienCong = value;
					this.SendPropertyChanged("IDTienCong");
					this.OnIDTienCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTri", DbType="Int")]
		public System.Nullable<int> GiaTri
		{
			get
			{
				return this._GiaTri;
			}
			set
			{
				if ((this._GiaTri != value))
				{
					this.OnGiaTriChanging(value);
					this.SendPropertyChanging();
					this._GiaTri = value;
					this.SendPropertyChanged("GiaTri");
					this.OnGiaTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_ChiTietSuaChua", Storage="_ChiTietSuaChuas", ThisKey="IDTienCong", OtherKey="IDTienCong")]
		public EntitySet<ChiTietSuaChua> ChiTietSuaChuas
		{
			get
			{
				return this._ChiTietSuaChuas;
			}
			set
			{
				this._ChiTietSuaChuas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietSuaChuas(ChiTietSuaChua entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = this;
		}
		
		private void detach_ChiTietSuaChuas(ChiTietSuaChua entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoanhThu")]
	public partial class DoanhThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDBaoCaoDoanhThu;
		
		private System.Nullable<int> _IDNguoiDung;
		
		private string _DoanhThu1;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private string _NguoiLap;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDBaoCaoDoanhThuChanging(int value);
    partial void OnIDBaoCaoDoanhThuChanged();
    partial void OnIDNguoiDungChanging(System.Nullable<int> value);
    partial void OnIDNguoiDungChanged();
    partial void OnDoanhThu1Changing(string value);
    partial void OnDoanhThu1Changed();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnNguoiLapChanging(string value);
    partial void OnNguoiLapChanged();
    #endregion
		
		public DoanhThu()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBaoCaoDoanhThu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDBaoCaoDoanhThu
		{
			get
			{
				return this._IDBaoCaoDoanhThu;
			}
			set
			{
				if ((this._IDBaoCaoDoanhThu != value))
				{
					this.OnIDBaoCaoDoanhThuChanging(value);
					this.SendPropertyChanging();
					this._IDBaoCaoDoanhThu = value;
					this.SendPropertyChanged("IDBaoCaoDoanhThu");
					this.OnIDBaoCaoDoanhThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNguoiDung", DbType="Int")]
		public System.Nullable<int> IDNguoiDung
		{
			get
			{
				return this._IDNguoiDung;
			}
			set
			{
				if ((this._IDNguoiDung != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IDNguoiDung = value;
					this.SendPropertyChanged("IDNguoiDung");
					this.OnIDNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DoanhThu", Storage="_DoanhThu1", DbType="NChar(10)")]
		public string DoanhThu1
		{
			get
			{
				return this._DoanhThu1;
			}
			set
			{
				if ((this._DoanhThu1 != value))
				{
					this.OnDoanhThu1Changing(value);
					this.SendPropertyChanging();
					this._DoanhThu1 = value;
					this.SendPropertyChanged("DoanhThu1");
					this.OnDoanhThu1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiLap", DbType="NVarChar(MAX)")]
		public string NguoiLap
		{
			get
			{
				return this._NguoiLap;
			}
			set
			{
				if ((this._NguoiLap != value))
				{
					this.OnNguoiLapChanging(value);
					this.SendPropertyChanging();
					this._NguoiLap = value;
					this.SendPropertyChanged("NguoiLap");
					this.OnNguoiLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DoanhThu", Storage="_User", ThisKey="IDNguoiDung", OtherKey="IDUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.DoanhThus.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.DoanhThus.Add(this);
						this._IDNguoiDung = value.IDUser;
					}
					else
					{
						this._IDNguoiDung = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKhachHang;
		
		private string _Tên;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private EntitySet<TiepNhanXe> _TiepNhanXes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKhachHangChanging(int value);
    partial void OnIDKhachHangChanged();
    partial void OnTênChanging(string value);
    partial void OnTênChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public KhachHang()
		{
			this._TiepNhanXes = new EntitySet<TiepNhanXe>(new Action<TiepNhanXe>(this.attach_TiepNhanXes), new Action<TiepNhanXe>(this.detach_TiepNhanXes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhachHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDKhachHang
		{
			get
			{
				return this._IDKhachHang;
			}
			set
			{
				if ((this._IDKhachHang != value))
				{
					this.OnIDKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IDKhachHang = value;
					this.SendPropertyChanged("IDKhachHang");
					this.OnIDKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tên", DbType="NVarChar(50)")]
		public string Tên
		{
			get
			{
				return this._Tên;
			}
			set
			{
				if ((this._Tên != value))
				{
					this.OnTênChanging(value);
					this.SendPropertyChanging();
					this._Tên = value;
					this.SendPropertyChanged("Tên");
					this.OnTênChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(150)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_TiepNhanXe", Storage="_TiepNhanXes", ThisKey="IDKhachHang", OtherKey="IDKhachHang")]
		public EntitySet<TiepNhanXe> TiepNhanXes
		{
			get
			{
				return this._TiepNhanXes;
			}
			set
			{
				this._TiepNhanXes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TiepNhanXes(TiepNhanXe entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_TiepNhanXes(TiepNhanXe entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDNhaCungCap;
		
		private string _Ten;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private EntitySet<NhapKho> _NhapKhos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNhaCungCapChanging(int value);
    partial void OnIDNhaCungCapChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public NhaCungCap()
		{
			this._NhapKhos = new EntitySet<NhapKho>(new Action<NhapKho>(this.attach_NhapKhos), new Action<NhapKho>(this.detach_NhapKhos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhaCungCap", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDNhaCungCap
		{
			get
			{
				return this._IDNhaCungCap;
			}
			set
			{
				if ((this._IDNhaCungCap != value))
				{
					this.OnIDNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._IDNhaCungCap = value;
					this.SendPropertyChanged("IDNhaCungCap");
					this.OnIDNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(MAX)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(20)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_NhapKho", Storage="_NhapKhos", ThisKey="IDNhaCungCap", OtherKey="IDNhaCungCap")]
		public EntitySet<NhapKho> NhapKhos
		{
			get
			{
				return this._NhapKhos;
			}
			set
			{
				this._NhapKhos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhapKhos(NhapKho entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_NhapKhos(NhapKho entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhapKho")]
	public partial class NhapKho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDNhapKho;
		
		private System.Nullable<int> _IDNhaCungCap;
		
		private System.Nullable<int> _IDUser;
		
		private System.Nullable<System.DateTime> _NgayNhap;
		
		private System.Nullable<int> _TongTien;
		
		private string _TenNguoiNhap;
		
		private string _TenNhaCC;
		
		private EntitySet<CTNhapKho> _CTNhapKhos;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNhapKhoChanging(int value);
    partial void OnIDNhapKhoChanged();
    partial void OnIDNhaCungCapChanging(System.Nullable<int> value);
    partial void OnIDNhaCungCapChanged();
    partial void OnIDUserChanging(System.Nullable<int> value);
    partial void OnIDUserChanged();
    partial void OnNgayNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhapChanged();
    partial void OnTongTienChanging(System.Nullable<int> value);
    partial void OnTongTienChanged();
    partial void OnTenNguoiNhapChanging(string value);
    partial void OnTenNguoiNhapChanged();
    partial void OnTenNhaCCChanging(string value);
    partial void OnTenNhaCCChanged();
    #endregion
		
		public NhapKho()
		{
			this._CTNhapKhos = new EntitySet<CTNhapKho>(new Action<CTNhapKho>(this.attach_CTNhapKhos), new Action<CTNhapKho>(this.detach_CTNhapKhos));
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhapKho", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDNhapKho
		{
			get
			{
				return this._IDNhapKho;
			}
			set
			{
				if ((this._IDNhapKho != value))
				{
					this.OnIDNhapKhoChanging(value);
					this.SendPropertyChanging();
					this._IDNhapKho = value;
					this.SendPropertyChanged("IDNhapKho");
					this.OnIDNhapKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhaCungCap", DbType="Int")]
		public System.Nullable<int> IDNhaCungCap
		{
			get
			{
				return this._IDNhaCungCap;
			}
			set
			{
				if ((this._IDNhaCungCap != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._IDNhaCungCap = value;
					this.SendPropertyChanged("IDNhaCungCap");
					this.OnIDNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", DbType="Int")]
		public System.Nullable<int> IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Int")]
		public System.Nullable<int> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNguoiNhap", DbType="NVarChar(MAX)")]
		public string TenNguoiNhap
		{
			get
			{
				return this._TenNguoiNhap;
			}
			set
			{
				if ((this._TenNguoiNhap != value))
				{
					this.OnTenNguoiNhapChanging(value);
					this.SendPropertyChanging();
					this._TenNguoiNhap = value;
					this.SendPropertyChanged("TenNguoiNhap");
					this.OnTenNguoiNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhaCC", DbType="NVarChar(MAX)")]
		public string TenNhaCC
		{
			get
			{
				return this._TenNhaCC;
			}
			set
			{
				if ((this._TenNhaCC != value))
				{
					this.OnTenNhaCCChanging(value);
					this.SendPropertyChanging();
					this._TenNhaCC = value;
					this.SendPropertyChanged("TenNhaCC");
					this.OnTenNhaCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhapKho_CTNhapKho", Storage="_CTNhapKhos", ThisKey="IDNhapKho", OtherKey="IDNhapKho")]
		public EntitySet<CTNhapKho> CTNhapKhos
		{
			get
			{
				return this._CTNhapKhos;
			}
			set
			{
				this._CTNhapKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_NhapKho", Storage="_NhaCungCap", ThisKey="IDNhaCungCap", OtherKey="IDNhaCungCap", IsForeignKey=true)]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.NhapKhos.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.NhapKhos.Add(this);
						this._IDNhaCungCap = value.IDNhaCungCap;
					}
					else
					{
						this._IDNhaCungCap = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_NhapKho", Storage="_User", ThisKey="IDUser", OtherKey="IDUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.NhapKhos.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.NhapKhos.Add(this);
						this._IDUser = value.IDUser;
					}
					else
					{
						this._IDUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTNhapKhos(CTNhapKho entity)
		{
			this.SendPropertyChanging();
			entity.NhapKho = this;
		}
		
		private void detach_CTNhapKhos(CTNhapKho entity)
		{
			this.SendPropertyChanging();
			entity.NhapKho = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quyen")]
	public partial class Quyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDQuyen;
		
		private string _Ten;
		
		private EntitySet<ChoPhepSuDungQuyen> _ChoPhepSuDungQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDQuyenChanging(int value);
    partial void OnIDQuyenChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    #endregion
		
		public Quyen()
		{
			this._ChoPhepSuDungQuyens = new EntitySet<ChoPhepSuDungQuyen>(new Action<ChoPhepSuDungQuyen>(this.attach_ChoPhepSuDungQuyens), new Action<ChoPhepSuDungQuyen>(this.detach_ChoPhepSuDungQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDQuyen", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDQuyen
		{
			get
			{
				return this._IDQuyen;
			}
			set
			{
				if ((this._IDQuyen != value))
				{
					this.OnIDQuyenChanging(value);
					this.SendPropertyChanging();
					this._IDQuyen = value;
					this.SendPropertyChanged("IDQuyen");
					this.OnIDQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(MAX)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quyen_ChoPhepSuDungQuyen", Storage="_ChoPhepSuDungQuyens", ThisKey="IDQuyen", OtherKey="IDQuyen")]
		public EntitySet<ChoPhepSuDungQuyen> ChoPhepSuDungQuyens
		{
			get
			{
				return this._ChoPhepSuDungQuyens;
			}
			set
			{
				this._ChoPhepSuDungQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChoPhepSuDungQuyens(ChoPhepSuDungQuyen entity)
		{
			this.SendPropertyChanging();
			entity.Quyen = this;
		}
		
		private void detach_ChoPhepSuDungQuyens(ChoPhepSuDungQuyen entity)
		{
			this.SendPropertyChanging();
			entity.Quyen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuaChua")]
	public partial class SuaChua : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMaSuaChua;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<int> _TongTien;
		
		private System.Nullable<int> _IDTiepNhan;
		
		private EntitySet<ChiTietSuaChua> _ChiTietSuaChuas;
		
		private EntityRef<TiepNhanXe> _TiepNhanXe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMaSuaChuaChanging(int value);
    partial void OnIDMaSuaChuaChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnTongTienChanging(System.Nullable<int> value);
    partial void OnTongTienChanged();
    partial void OnIDTiepNhanChanging(System.Nullable<int> value);
    partial void OnIDTiepNhanChanged();
    #endregion
		
		public SuaChua()
		{
			this._ChiTietSuaChuas = new EntitySet<ChiTietSuaChua>(new Action<ChiTietSuaChua>(this.attach_ChiTietSuaChuas), new Action<ChiTietSuaChua>(this.detach_ChiTietSuaChuas));
			this._TiepNhanXe = default(EntityRef<TiepNhanXe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMaSuaChua", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDMaSuaChua
		{
			get
			{
				return this._IDMaSuaChua;
			}
			set
			{
				if ((this._IDMaSuaChua != value))
				{
					this.OnIDMaSuaChuaChanging(value);
					this.SendPropertyChanging();
					this._IDMaSuaChua = value;
					this.SendPropertyChanged("IDMaSuaChua");
					this.OnIDMaSuaChuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Int")]
		public System.Nullable<int> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTiepNhan", DbType="Int")]
		public System.Nullable<int> IDTiepNhan
		{
			get
			{
				return this._IDTiepNhan;
			}
			set
			{
				if ((this._IDTiepNhan != value))
				{
					if (this._TiepNhanXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTiepNhanChanging(value);
					this.SendPropertyChanging();
					this._IDTiepNhan = value;
					this.SendPropertyChanged("IDTiepNhan");
					this.OnIDTiepNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuaChua_ChiTietSuaChua", Storage="_ChiTietSuaChuas", ThisKey="IDMaSuaChua", OtherKey="IDMaSuaChu")]
		public EntitySet<ChiTietSuaChua> ChiTietSuaChuas
		{
			get
			{
				return this._ChiTietSuaChuas;
			}
			set
			{
				this._ChiTietSuaChuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TiepNhanXe_SuaChua", Storage="_TiepNhanXe", ThisKey="IDTiepNhan", OtherKey="IDTiepNhanXe", IsForeignKey=true)]
		public TiepNhanXe TiepNhanXe
		{
			get
			{
				return this._TiepNhanXe.Entity;
			}
			set
			{
				TiepNhanXe previousValue = this._TiepNhanXe.Entity;
				if (((previousValue != value) 
							|| (this._TiepNhanXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TiepNhanXe.Entity = null;
						previousValue.SuaChuas.Remove(this);
					}
					this._TiepNhanXe.Entity = value;
					if ((value != null))
					{
						value.SuaChuas.Add(this);
						this._IDTiepNhan = value.IDTiepNhanXe;
					}
					else
					{
						this._IDTiepNhan = default(Nullable<int>);
					}
					this.SendPropertyChanged("TiepNhanXe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietSuaChuas(ChiTietSuaChua entity)
		{
			this.SendPropertyChanging();
			entity.SuaChua = this;
		}
		
		private void detach_ChiTietSuaChuas(ChiTietSuaChua entity)
		{
			this.SendPropertyChanging();
			entity.SuaChua = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThuongHieuXe")]
	public partial class ThuongHieuXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDThuongHieuXe;
		
		private string _TenThuongHieu;
		
		private string _ANh;
		
		private EntitySet<ChiTietDoanhThu> _ChiTietDoanhThus;
		
		private EntitySet<VatTu> _VatTus;
		
		private EntitySet<TiepNhanXe> _TiepNhanXes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDThuongHieuXeChanging(int value);
    partial void OnIDThuongHieuXeChanged();
    partial void OnTenThuongHieuChanging(string value);
    partial void OnTenThuongHieuChanged();
    partial void OnANhChanging(string value);
    partial void OnANhChanged();
    #endregion
		
		public ThuongHieuXe()
		{
			this._ChiTietDoanhThus = new EntitySet<ChiTietDoanhThu>(new Action<ChiTietDoanhThu>(this.attach_ChiTietDoanhThus), new Action<ChiTietDoanhThu>(this.detach_ChiTietDoanhThus));
			this._VatTus = new EntitySet<VatTu>(new Action<VatTu>(this.attach_VatTus), new Action<VatTu>(this.detach_VatTus));
			this._TiepNhanXes = new EntitySet<TiepNhanXe>(new Action<TiepNhanXe>(this.attach_TiepNhanXes), new Action<TiepNhanXe>(this.detach_TiepNhanXes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDThuongHieuXe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDThuongHieuXe
		{
			get
			{
				return this._IDThuongHieuXe;
			}
			set
			{
				if ((this._IDThuongHieuXe != value))
				{
					this.OnIDThuongHieuXeChanging(value);
					this.SendPropertyChanging();
					this._IDThuongHieuXe = value;
					this.SendPropertyChanged("IDThuongHieuXe");
					this.OnIDThuongHieuXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThuongHieu", DbType="NVarChar(50)")]
		public string TenThuongHieu
		{
			get
			{
				return this._TenThuongHieu;
			}
			set
			{
				if ((this._TenThuongHieu != value))
				{
					this.OnTenThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._TenThuongHieu = value;
					this.SendPropertyChanged("TenThuongHieu");
					this.OnTenThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANh", DbType="VarChar(MAX)")]
		public string ANh
		{
			get
			{
				return this._ANh;
			}
			set
			{
				if ((this._ANh != value))
				{
					this.OnANhChanging(value);
					this.SendPropertyChanging();
					this._ANh = value;
					this.SendPropertyChanged("ANh");
					this.OnANhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieuXe_ChiTietDoanhThu", Storage="_ChiTietDoanhThus", ThisKey="IDThuongHieuXe", OtherKey="IDHangXe")]
		public EntitySet<ChiTietDoanhThu> ChiTietDoanhThus
		{
			get
			{
				return this._ChiTietDoanhThus;
			}
			set
			{
				this._ChiTietDoanhThus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieuXe_VatTu", Storage="_VatTus", ThisKey="IDThuongHieuXe", OtherKey="IDHangXe")]
		public EntitySet<VatTu> VatTus
		{
			get
			{
				return this._VatTus;
			}
			set
			{
				this._VatTus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieuXe_TiepNhanXe", Storage="_TiepNhanXes", ThisKey="IDThuongHieuXe", OtherKey="IDThuongHieuXe")]
		public EntitySet<TiepNhanXe> TiepNhanXes
		{
			get
			{
				return this._TiepNhanXes;
			}
			set
			{
				this._TiepNhanXes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDoanhThus(ChiTietDoanhThu entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieuXe = this;
		}
		
		private void detach_ChiTietDoanhThus(ChiTietDoanhThu entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieuXe = null;
		}
		
		private void attach_VatTus(VatTu entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieuXe = this;
		}
		
		private void detach_VatTus(VatTu entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieuXe = null;
		}
		
		private void attach_TiepNhanXes(TiepNhanXe entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieuXe = this;
		}
		
		private void detach_TiepNhanXes(TiepNhanXe entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieuXe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TiepNhanXe")]
	public partial class TiepNhanXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTiepNhanXe;
		
		private string _BienSoXe;
		
		private System.Nullable<System.DateTime> _NgayTiepNhan;
		
		private System.Nullable<int> _No;
		
		private System.Nullable<int> _IDKhachHang;
		
		private System.Nullable<int> _IDThuongHieuXe;
		
		private EntitySet<SuaChua> _SuaChuas;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<ThuongHieuXe> _ThuongHieuXe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTiepNhanXeChanging(int value);
    partial void OnIDTiepNhanXeChanged();
    partial void OnBienSoXeChanging(string value);
    partial void OnBienSoXeChanged();
    partial void OnNgayTiepNhanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTiepNhanChanged();
    partial void OnNoChanging(System.Nullable<int> value);
    partial void OnNoChanged();
    partial void OnIDKhachHangChanging(System.Nullable<int> value);
    partial void OnIDKhachHangChanged();
    partial void OnIDThuongHieuXeChanging(System.Nullable<int> value);
    partial void OnIDThuongHieuXeChanged();
    #endregion
		
		public TiepNhanXe()
		{
			this._SuaChuas = new EntitySet<SuaChua>(new Action<SuaChua>(this.attach_SuaChuas), new Action<SuaChua>(this.detach_SuaChuas));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._ThuongHieuXe = default(EntityRef<ThuongHieuXe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTiepNhanXe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTiepNhanXe
		{
			get
			{
				return this._IDTiepNhanXe;
			}
			set
			{
				if ((this._IDTiepNhanXe != value))
				{
					this.OnIDTiepNhanXeChanging(value);
					this.SendPropertyChanging();
					this._IDTiepNhanXe = value;
					this.SendPropertyChanged("IDTiepNhanXe");
					this.OnIDTiepNhanXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BienSoXe", DbType="NVarChar(50)")]
		public string BienSoXe
		{
			get
			{
				return this._BienSoXe;
			}
			set
			{
				if ((this._BienSoXe != value))
				{
					this.OnBienSoXeChanging(value);
					this.SendPropertyChanging();
					this._BienSoXe = value;
					this.SendPropertyChanged("BienSoXe");
					this.OnBienSoXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTiepNhan", DbType="Date")]
		public System.Nullable<System.DateTime> NgayTiepNhan
		{
			get
			{
				return this._NgayTiepNhan;
			}
			set
			{
				if ((this._NgayTiepNhan != value))
				{
					this.OnNgayTiepNhanChanging(value);
					this.SendPropertyChanging();
					this._NgayTiepNhan = value;
					this.SendPropertyChanged("NgayTiepNhan");
					this.OnNgayTiepNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int")]
		public System.Nullable<int> No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhachHang", DbType="Int")]
		public System.Nullable<int> IDKhachHang
		{
			get
			{
				return this._IDKhachHang;
			}
			set
			{
				if ((this._IDKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IDKhachHang = value;
					this.SendPropertyChanged("IDKhachHang");
					this.OnIDKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDThuongHieuXe", DbType="Int")]
		public System.Nullable<int> IDThuongHieuXe
		{
			get
			{
				return this._IDThuongHieuXe;
			}
			set
			{
				if ((this._IDThuongHieuXe != value))
				{
					if (this._ThuongHieuXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDThuongHieuXeChanging(value);
					this.SendPropertyChanging();
					this._IDThuongHieuXe = value;
					this.SendPropertyChanged("IDThuongHieuXe");
					this.OnIDThuongHieuXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TiepNhanXe_SuaChua", Storage="_SuaChuas", ThisKey="IDTiepNhanXe", OtherKey="IDTiepNhan")]
		public EntitySet<SuaChua> SuaChuas
		{
			get
			{
				return this._SuaChuas;
			}
			set
			{
				this._SuaChuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_TiepNhanXe", Storage="_KhachHang", ThisKey="IDKhachHang", OtherKey="IDKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.TiepNhanXes.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.TiepNhanXes.Add(this);
						this._IDKhachHang = value.IDKhachHang;
					}
					else
					{
						this._IDKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieuXe_TiepNhanXe", Storage="_ThuongHieuXe", ThisKey="IDThuongHieuXe", OtherKey="IDThuongHieuXe", IsForeignKey=true)]
		public ThuongHieuXe ThuongHieuXe
		{
			get
			{
				return this._ThuongHieuXe.Entity;
			}
			set
			{
				ThuongHieuXe previousValue = this._ThuongHieuXe.Entity;
				if (((previousValue != value) 
							|| (this._ThuongHieuXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuongHieuXe.Entity = null;
						previousValue.TiepNhanXes.Remove(this);
					}
					this._ThuongHieuXe.Entity = value;
					if ((value != null))
					{
						value.TiepNhanXes.Add(this);
						this._IDThuongHieuXe = value.IDThuongHieuXe;
					}
					else
					{
						this._IDThuongHieuXe = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThuongHieuXe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SuaChuas(SuaChua entity)
		{
			this.SendPropertyChanging();
			entity.TiepNhanXe = this;
		}
		
		private void detach_SuaChuas(SuaChua entity)
		{
			this.SendPropertyChanging();
			entity.TiepNhanXe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TonKho")]
	public partial class TonKho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTonKho;
		
		private System.Nullable<int> _IDUser;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private string _NguoiLap;
		
		private EntitySet<CTTonKho> _CTTonKhos;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTonKhoChanging(int value);
    partial void OnIDTonKhoChanged();
    partial void OnIDUserChanging(System.Nullable<int> value);
    partial void OnIDUserChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnNguoiLapChanging(string value);
    partial void OnNguoiLapChanged();
    #endregion
		
		public TonKho()
		{
			this._CTTonKhos = new EntitySet<CTTonKho>(new Action<CTTonKho>(this.attach_CTTonKhos), new Action<CTTonKho>(this.detach_CTTonKhos));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTonKho", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTonKho
		{
			get
			{
				return this._IDTonKho;
			}
			set
			{
				if ((this._IDTonKho != value))
				{
					this.OnIDTonKhoChanging(value);
					this.SendPropertyChanging();
					this._IDTonKho = value;
					this.SendPropertyChanged("IDTonKho");
					this.OnIDTonKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", DbType="Int")]
		public System.Nullable<int> IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiLap", DbType="NVarChar(MAX)")]
		public string NguoiLap
		{
			get
			{
				return this._NguoiLap;
			}
			set
			{
				if ((this._NguoiLap != value))
				{
					this.OnNguoiLapChanging(value);
					this.SendPropertyChanging();
					this._NguoiLap = value;
					this.SendPropertyChanged("NguoiLap");
					this.OnNguoiLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TonKho_CTTonKho", Storage="_CTTonKhos", ThisKey="IDTonKho", OtherKey="IDTonKho")]
		public EntitySet<CTTonKho> CTTonKhos
		{
			get
			{
				return this._CTTonKhos;
			}
			set
			{
				this._CTTonKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TonKho", Storage="_User", ThisKey="IDUser", OtherKey="IDUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TonKhos.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TonKhos.Add(this);
						this._IDUser = value.IDUser;
					}
					else
					{
						this._IDUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTTonKhos(CTTonKho entity)
		{
			this.SendPropertyChanging();
			entity.TonKho = this;
		}
		
		private void detach_CTTonKhos(CTTonKho entity)
		{
			this.SendPropertyChanging();
			entity.TonKho = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDUser;
		
		private System.Nullable<int> _IDChucVu;
		
		private string _TenTK;
		
		private string _MK;
		
		private EntitySet<ChiTietSuaChua> _ChiTietSuaChuas;
		
		private EntitySet<ChiTietUser> _ChiTietUsers;
		
		private EntitySet<DoanhThu> _DoanhThus;
		
		private EntitySet<NhapKho> _NhapKhos;
		
		private EntitySet<TonKho> _TonKhos;
		
		private EntityRef<ChucVu> _ChucVu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUserChanging(int value);
    partial void OnIDUserChanged();
    partial void OnIDChucVuChanging(System.Nullable<int> value);
    partial void OnIDChucVuChanged();
    partial void OnTenTKChanging(string value);
    partial void OnTenTKChanged();
    partial void OnMKChanging(string value);
    partial void OnMKChanged();
    #endregion
		
		public User()
		{
			this._ChiTietSuaChuas = new EntitySet<ChiTietSuaChua>(new Action<ChiTietSuaChua>(this.attach_ChiTietSuaChuas), new Action<ChiTietSuaChua>(this.detach_ChiTietSuaChuas));
			this._ChiTietUsers = new EntitySet<ChiTietUser>(new Action<ChiTietUser>(this.attach_ChiTietUsers), new Action<ChiTietUser>(this.detach_ChiTietUsers));
			this._DoanhThus = new EntitySet<DoanhThu>(new Action<DoanhThu>(this.attach_DoanhThus), new Action<DoanhThu>(this.detach_DoanhThus));
			this._NhapKhos = new EntitySet<NhapKho>(new Action<NhapKho>(this.attach_NhapKhos), new Action<NhapKho>(this.detach_NhapKhos));
			this._TonKhos = new EntitySet<TonKho>(new Action<TonKho>(this.attach_TonKhos), new Action<TonKho>(this.detach_TonKhos));
			this._ChucVu = default(EntityRef<ChucVu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDChucVu", DbType="Int")]
		public System.Nullable<int> IDChucVu
		{
			get
			{
				return this._IDChucVu;
			}
			set
			{
				if ((this._IDChucVu != value))
				{
					if (this._ChucVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChucVuChanging(value);
					this.SendPropertyChanging();
					this._IDChucVu = value;
					this.SendPropertyChanged("IDChucVu");
					this.OnIDChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTK", DbType="NVarChar(MAX)")]
		public string TenTK
		{
			get
			{
				return this._TenTK;
			}
			set
			{
				if ((this._TenTK != value))
				{
					this.OnTenTKChanging(value);
					this.SendPropertyChanging();
					this._TenTK = value;
					this.SendPropertyChanged("TenTK");
					this.OnTenTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MK", DbType="NVarChar(MAX)")]
		public string MK
		{
			get
			{
				return this._MK;
			}
			set
			{
				if ((this._MK != value))
				{
					this.OnMKChanging(value);
					this.SendPropertyChanging();
					this._MK = value;
					this.SendPropertyChanged("MK");
					this.OnMKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ChiTietSuaChua", Storage="_ChiTietSuaChuas", ThisKey="IDUser", OtherKey="IDUser")]
		public EntitySet<ChiTietSuaChua> ChiTietSuaChuas
		{
			get
			{
				return this._ChiTietSuaChuas;
			}
			set
			{
				this._ChiTietSuaChuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ChiTietUser", Storage="_ChiTietUsers", ThisKey="IDUser", OtherKey="IDUser")]
		public EntitySet<ChiTietUser> ChiTietUsers
		{
			get
			{
				return this._ChiTietUsers;
			}
			set
			{
				this._ChiTietUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DoanhThu", Storage="_DoanhThus", ThisKey="IDUser", OtherKey="IDNguoiDung")]
		public EntitySet<DoanhThu> DoanhThus
		{
			get
			{
				return this._DoanhThus;
			}
			set
			{
				this._DoanhThus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_NhapKho", Storage="_NhapKhos", ThisKey="IDUser", OtherKey="IDUser")]
		public EntitySet<NhapKho> NhapKhos
		{
			get
			{
				return this._NhapKhos;
			}
			set
			{
				this._NhapKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TonKho", Storage="_TonKhos", ThisKey="IDUser", OtherKey="IDUser")]
		public EntitySet<TonKho> TonKhos
		{
			get
			{
				return this._TonKhos;
			}
			set
			{
				this._TonKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_User", Storage="_ChucVu", ThisKey="IDChucVu", OtherKey="IDChuVu", IsForeignKey=true)]
		public ChucVu ChucVu
		{
			get
			{
				return this._ChucVu.Entity;
			}
			set
			{
				ChucVu previousValue = this._ChucVu.Entity;
				if (((previousValue != value) 
							|| (this._ChucVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChucVu.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._ChucVu.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._IDChucVu = value.IDChuVu;
					}
					else
					{
						this._IDChucVu = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChucVu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietSuaChuas(ChiTietSuaChua entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ChiTietSuaChuas(ChiTietSuaChua entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ChiTietUsers(ChiTietUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ChiTietUsers(ChiTietUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_DoanhThus(DoanhThu entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_DoanhThus(DoanhThu entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_NhapKhos(NhapKho entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_NhapKhos(NhapKho entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TonKhos(TonKho entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TonKhos(TonKho entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
